TODO for 99_function_renaming branch

function renaming (#99) + spliting up Application into EasyBlock and Application (issue #136) + moving generic easyblocks like Binary, Tarball, CMake out of easyblocks (issue #??)
)

tasks:

 * rename all step functions with _step suffix
 * add stubs for new functions as agreed in issue #99: checksum, depends, stage_install, bin_install, package
 * split up Application into EasyBlock and Application
   * only configure, build (ex-make), install (ex-make_install) and sanity_check (ex-sanitycheck) should go in Application
   * Application should go in easybuild/easyblocks/_generic_
   * EasyBlock should go into easybuild/framework
 * rename ApplicationPackage to Extension, derive PythonPackage, R_Library, RubyGem, PerlModule from Extension
 * move Binary, Tarball, CMake, Extension (ex-ApplicationPackage), PackedBinary to easybuild/easyblocks/_generic_
     and adjust __init__ in easyblocks folder so that this path is also looked into as a part of the easyblocks namespace
     also update repo_setup.py script
 * move get_paths_for to easyconfig.py module
 * reorder functions in EasyBlock class, into somewhat logical order (e.g. group steps together in order they are called, etc)
 * reorganize run_all_steps (ex-autobuild) with all steps, called by run_step (ex-runstep)
    * merge build_and_install into run_all_steps instead of making it a seperate function
 * join fetch_extension_patches and fetch_extension_sources into fetch_extension_files
 * join extensions_step and extra_extensions into extensions_step
 * reconsider getting ride of get_name (ex-name), get_version (ex-version), get_toolkit (ex-toolkit), get_toolkit_name (ex-toolkit_name), get_toolkit_version (ex-toolkit_version) functions, and defining variables for this in init that can be accessed
    to limit the number of functions in EasyBlock class? or should we make all variables in EasyBlock private?
 * run full regression test, and make it pass
 * update documentation w.r.t. changed function names, easyconfig parameters (pkg* -> exts*), ...

additional work (open a seperate issue for this)
 * get rid of print_environ, implement update_devel_module which replaces this (in a better way)
   * stop filling build log with tons of environment values, create seperate devel module per executed step 
 * add optional arguments to sanity_check (ex-sanitycheck) to pass custom sanity check paths/commands
   * this should significantly clean up cruft in almost all easyblocks, no need to check self.getcfg('sanityCheckPaths') 
 * check whether get_installsize is being used where it should


DONE:

* get rid of set_name_version, is no longer used
* rename all functions according to notes on whiteboard (through port_easyblocks.py?)
  * done in all easyblocks, build.py, framework, tools, regtest.py script
 * rename 'pkglist', 'pkgmodulesnames', 'pkgloadmodule', 'pkgtemplate', 'pkgfindsource', 'pkginstalldeps', 'pkgdefaultclass', 'pkgfilter', 'pkgcfgs' easyconfig parameters
    => [Pp]ackages -> [Ee]xtensions (pkg -> ext)
    => note: keep PythonPackage and CMakePythonPackage class names, because they are not easy to confusing with 'packaging'
 * rename 'startfrom' easyconfig parameter to 'start_dir'
 * check for use of package/pkg variable names, replace them accordingly with easyblock or eb (packaging should be used to e.g. create RPMs)
