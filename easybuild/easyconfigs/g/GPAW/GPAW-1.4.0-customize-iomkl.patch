--- /dev/null	2018-09-29 11:12:21.539000250 +0200
+++ gpaw-1.4.0/eb_intel_customize.py	2018-10-09 14:30:17.345526945 +0200
@@ -0,0 +1,85 @@
+"""User provided customizations.
+
+Here one changes the default arguments for compiling _gpaw.so (serial)
+and gpaw-python (parallel).
+
+Here are all the lists that can be modified:
+
+* libraries
+* library_dirs
+* include_dirs
+* extra_link_args
+* extra_compile_args
+* runtime_library_dirs
+* extra_objects
+* define_macros
+* mpi_libraries
+* mpi_library_dirs
+* mpi_include_dirs
+* mpi_runtime_library_dirs
+* mpi_define_macros
+
+To override use the form:
+
+    libraries = ['somelib', 'otherlib']
+
+To append use the form
+
+    libraries += ['somelib', 'otherlib']
+"""
+
+
+scalapack = True
+
+libraries = ['mkl_intel_lp64',
+             'mkl_sequential',
+             'mkl_core',
+             'pthread',
+             'm',
+             'dl',
+             'readline',]
+
+mpi_libraries = []
+
+# Convert static library specs from EasyBuild to GPAW
+def static_eblibs_to_gpawlibs(lib_specs):
+    return [libfile[3:-2] for libfile in os.getenv(lib_specs).split(',')]
+
+# Use EasyBuild fftw from the active toolchain
+fftw = os.getenv('FFT_STATIC_LIBS')
+if fftw:
+    libraries += static_eblibs_to_gpawlibs('FFT_STATIC_LIBS')
+
+# Use ScaLAPACK:
+# Warning! At least scalapack 2.0.1 is required!
+# See https://trac.fysik.dtu.dk/projects/gpaw/ticket/230
+if scalapack:
+    mpi_libraries += ['mkl_scalapack_lp64',
+                      'mkl_blacs_openmpi_lp64',]
+    mpi_define_macros += [('GPAW_NO_UNDERSCORE_CBLACS', '1')]
+    mpi_define_macros += [('GPAW_NO_UNDERSCORE_CSCALAPACK', '1')]
+
+
+# LibXC:
+# Use EasyBuild libxc
+libxc = os.getenv('EBROOTLIBXC')
+if libxc:
+    include_dirs.append(os.path.join(libxc, 'include'))
+    if 'xc' not in libraries:
+        libraries.append('xc')
+
+# libvdwxc:
+# Use EasyBuild libvdwxc
+libvdwxc = os.getenv('EBROOTLIBVDWXC')
+if libvdwxc:
+    include_dirs.append(os.path.join(libvdwxc, 'include'))
+    libraries.append('vdwxc')
+
+# Now add a EasyBuild "cover-all-bases" library_dirs
+library_dirs = os.getenv('LD_LIBRARY_PATH').split(':')
+
+# Build separate gpaw-python
+if 'MPICC' in os.environ:
+    mpicompiler = os.getenv('MPICC')
+    mpilinker = mpicompiler
+
