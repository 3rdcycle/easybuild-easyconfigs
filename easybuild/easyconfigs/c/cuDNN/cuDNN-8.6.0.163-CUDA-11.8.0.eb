name = 'cuDNN'
version = '8.6.0.163'
versionsuffix = '-CUDA-%(cudaver)s'
homepage = 'https://developer.nvidia.com/cudnn'
description = """The NVIDIA CUDA Deep Neural Network library (cuDNN) is
a GPU-accelerated library of primitives for deep neural networks."""

toolchain = SYSTEM

# note: cuDNN is tied to specific to CUDA versions,
# see also https://docs.nvidia.com/deeplearning/cudnn/support-matrix/index.html#cudnn-cuda-hardware-versions
local_short_ver = '.'.join(version.split('.')[:3])
local_cuda_major = '11'  # Is there a way to make this parametric? '%(cudaver)'.split(...) obviously doesn't work...

source_urls = [
    'https://developer.download.nvidia.com/compute/redist/cudnn/v%s/local_installers/%%(cudashortver)s/' % local_short_ver  # noqa: E501
]
sources = ['%%(namelower)s-linux-%%(cudnnarch)s-%%(version)s_cuda%s-archive.tar.xz' % local_cuda_major]
checksums = ['bbc396df47294c657edc09c600674d608cb1bfc80b82dcf4547060c21711159e']

dependencies = [('CUDA', '11.8.0')]

sanity_check_paths = {
    'files': [
        'include/cudnn.h', 'lib64/libcudnn_adv_infer_static.a', 'lib64/libcudnn_adv_train_static.a',
        'lib64/libcudnn_cnn_infer_static.a', 'lib64/libcudnn_cnn_train_static.a',
        'lib64/libcudnn_ops_infer_static.a', 'lib64/libcudnn_ops_train_static.a',
        'lib64/libcudnn.%s' % SHLIB_EXT
    ],
    'dirs': ['include', 'lib64'],
}

moduleclass = 'numlib'
