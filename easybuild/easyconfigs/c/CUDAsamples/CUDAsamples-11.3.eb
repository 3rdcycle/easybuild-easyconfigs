easyblock = 'MakeCp'

name = 'CUDAsamples'
version = '11.3'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/NVIDIA/cuda-samples'
description = "Samples for CUDA Developers which demonstrates features in CUDA Toolkit"

toolchain = {'name': 'GCC', 'version': '10.3.0'}

source_urls = ['https://github.com/NVIDIA/cuda-samples/archive/']
sources = ['v%(version)s.tar.gz']
checksums = ['2bee5f7c89347259aaab75aa6df6e10375059bdbbaf04cc7936f5db7d54fa3ac']

dependencies = [
    ('CUDA', '11.3.1', '', True),
]

# Get rid of pre-built Windows DLLs and only build deviceQuery for now.
# Other samples require extensive dependencies.
# If, at some point, all samples should be built, simply remove the explicit cd.
prebuildopts = "rm -r bin/win64 && cd Samples/deviceQuery && "

files_to_copy = [
    (['bin/%s/linux/release/*' % ARCH], 'bin'),
    'LICENSE',
]

local_binaries = ['deviceQuery']

# Only paths are used for sanity checks.
# Commands may fail due to missing compatibility libraries that might be needed
# to be able to use this specific CUDA version in combination with the available
# NVIDIA drivers.
sanity_check_paths = {
    'files': ['bin/%s' % x for x in local_binaries],
    'dirs': [],
}

moduleclass = 'lang'
